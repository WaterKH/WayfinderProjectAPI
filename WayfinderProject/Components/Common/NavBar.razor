<div class="wayfinder-nav-bar" style="@(CustomStyle)">
    @foreach (var option in this.Options)
    {
        <div class="@((this.CurrentOption == option) ? "wayfinder-container-active" : "wayfinder-container")">
            <span class="@((this.CurrentOption == option) ? "wayfinder-option-active" : "wayfinder-option")" @onclick="@(() => this.Select(option))">@option</span>
        </div>
    }

    @if (this.AnySelected)
    {
        <div class="@((this.CurrentOption == "All") ? "wayfinder-container-active" : "wayfinder-container")" style="margin-left: 25px;">
            <span class="@((this.CurrentOption == "All") ? "wayfinder-option-active" : "wayfinder-option")" @onclick="@(() => this.Select("All"))">All</span>
        </div>
    }
</div>

<div class="wayfinder-nav-bar-border"></div>

@code {
    [Parameter] public List<string> Options { get; set; }
    [Parameter] public bool AnySelected { get; set; }
    [Parameter] public string CustomStyle { get; set; }
    [Parameter] public string StartingOption { get; set; }

    [Parameter] public Action<string> UpdateCurrentOption { get; set; }

    public string CurrentOption { get; set; } = "Games";

    protected override void OnInitialized()
    {
        this.CurrentOption = this.StartingOption;

        base.OnInitialized();
    }

    public async Task Select(string option)
    {
        this.CurrentOption = option;

        await Task.Run(() => this.UpdateCurrentOption.Invoke(option));

        await InvokeAsync(() => { 
            this.StateHasChanged(); 
        });
    }
}
