// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WayfinderProjectAPI.Data;

#nullable disable

namespace WayfinderProject.Migrations
{
    [DbContext(typeof(WayfinderContext))]
    partial class WayfinderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("AreaScene", b =>
                {
                    b.Property<int>("AreasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScenesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AreasId", "ScenesId");

                    b.HasIndex("ScenesId");

                    b.ToTable("AreaScene");
                });

            modelBuilder.Entity("CharacterScene", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScenesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharactersId", "ScenesId");

                    b.HasIndex("ScenesId");

                    b.ToTable("CharacterScene");
                });

            modelBuilder.Entity("MusicScene", b =>
                {
                    b.Property<int>("MusicId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScenesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MusicId", "ScenesId");

                    b.HasIndex("ScenesId");

                    b.ToTable("MusicScene");
                });

            modelBuilder.Entity("SceneWorld", b =>
                {
                    b.Property<int>("ScenesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorldsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScenesId", "WorldsId");

                    b.HasIndex("WorldsId");

                    b.ToTable("SceneWorld");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.Scene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ScriptId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ScriptId");

                    b.ToTable("Scenes");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.Script", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SceneName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Script");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.ScriptLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScriptId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScriptId");

                    b.ToTable("ScriptLine");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.World", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Worlds");
                });

            modelBuilder.Entity("AreaScene", b =>
                {
                    b.HasOne("WayfinderProjectAPI.Data.Models.Area", null)
                        .WithMany()
                        .HasForeignKey("AreasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayfinderProjectAPI.Data.Models.Scene", null)
                        .WithMany()
                        .HasForeignKey("ScenesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharacterScene", b =>
                {
                    b.HasOne("WayfinderProjectAPI.Data.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayfinderProjectAPI.Data.Models.Scene", null)
                        .WithMany()
                        .HasForeignKey("ScenesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicScene", b =>
                {
                    b.HasOne("WayfinderProjectAPI.Data.Models.Music", null)
                        .WithMany()
                        .HasForeignKey("MusicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayfinderProjectAPI.Data.Models.Scene", null)
                        .WithMany()
                        .HasForeignKey("ScenesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SceneWorld", b =>
                {
                    b.HasOne("WayfinderProjectAPI.Data.Models.Scene", null)
                        .WithMany()
                        .HasForeignKey("ScenesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayfinderProjectAPI.Data.Models.World", null)
                        .WithMany()
                        .HasForeignKey("WorldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.Scene", b =>
                {
                    b.HasOne("WayfinderProjectAPI.Data.Models.Game", "Game")
                        .WithMany("Scenes")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayfinderProjectAPI.Data.Models.Script", "Script")
                        .WithMany("Scenes")
                        .HasForeignKey("ScriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Script");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.ScriptLine", b =>
                {
                    b.HasOne("WayfinderProjectAPI.Data.Models.Script", "Script")
                        .WithMany("Lines")
                        .HasForeignKey("ScriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Script");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.Game", b =>
                {
                    b.Navigation("Scenes");
                });

            modelBuilder.Entity("WayfinderProjectAPI.Data.Models.Script", b =>
                {
                    b.Navigation("Lines");

                    b.Navigation("Scenes");
                });
#pragma warning restore 612, 618
        }
    }
}
